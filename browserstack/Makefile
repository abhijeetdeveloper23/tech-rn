#############################
# Environment Setup
#############################
init:
	@make create-env
	@make fetch-secrets
	npm clean-install
# Write a default environment file
create-env:
	@echo "$$ENV_DEFAULT" > ./.env
# Fetch required secrets from vault
fetch-secrets:
	./sh/fetch-secrets

#############################
# Browswerstack
#############################
# Upload bundles to Live or Automate tools
upload-bstack-live:
	./sh/upload-bstack live $(PLATFORM)
upload-bstack-automate:
	./sh/upload-bstack automate $(PLATFORM)
# Run tests against the specified platfform.
test-bstack:
	npm run test:$(PLATFORM)

# Default .env file fields
define ENV_DEFAULT
# Absolute path to .apk or .ipa file
ANDROID_APP_PATH=
IOS_APP_PATH=
# App ID generated by Browserstack on upload, used to to specify
# which app bundle to run tests against,
# e.g. "bs://ab37c1f13449d91ebf5657f7dc7480680e07fff1"
BROWSERSTACK_APP_ID_ANDROID=
BROWSERSTACK_APP_ID_IOS=
# Login credentials for app testing
USER_EMAIL=
USER_PASSWORD=
FACEBOOK_USER_EMAIL=
FACEBOOK_USER_PASSWORD=
GOOGLE_USER_EMAIL=
GOOGLE_USER_PASSWORD=
# Shared secrets
endef
export ENV_DEFAULT

# If the command following "make" contains "bstack", treat the next space delimited word
# as the target platform.
ifneq (,$(findstring bstack,$(MAKECMDGOALS)))
  PLATFORM :=  $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))
  $(eval $(PLATFORM):;@:)
endif